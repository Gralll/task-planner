buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven { url "http://repo.spring.io/plugins-release" }
		//maven { url "http://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "net.ltgt.apt"


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
	maven { url 'http://repo.spring.io/milestone' }
	maven { url 'http://repo.spring.io/snapshot' }
	maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
	maven { url 'https://oss.sonatype.org/content/repositories/releases' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'http://repo.maven.apache.org/maven2' }
}

jar {
	baseName = 'task-planner'
	version =  '0.0.1'
}

task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': 'Gradle Jar File Example',
				'Implementation-Version': version,
				'Main-Class': 'com.gralll.taskplanner.TaskPlannerApplication'
	}
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

task wrapper(type: Wrapper) {
	gradleVersion = "4.0"
}
compileJava.dependsOn(processResources)

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-devtools')

	compile('org.springframework.boot:spring-boot-configuration-processor')


	compile('com.h2database:h2')
	compile('org.postgresql:postgresql')
	compile "org.mapstruct:mapstruct:${mapstruct_version}"
	compile ("io.springfox:springfox-swagger2:2.7.0") {
		exclude module: 'mapstruct'
	}
	compile ("io.springfox:springfox-swagger-ui:2.7.0")

	compile "io.jsonwebtoken:jjwt:${jjwt_version}"
	compile "org.apache.commons:commons-lang3:${apache_commons}"


	compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
	compile "com.fasterxml.jackson.core:jackson-annotations"
	compile "com.fasterxml.jackson.core:jackson-databind"
	compile "com.fasterxml.jackson.module:jackson-module-afterburner"

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

	apt "org.mapstruct:mapstruct-processor:${mapstruct_version}"
	apt "org.hibernate:hibernate-jpamodelgen:${hibernate_version}"
}